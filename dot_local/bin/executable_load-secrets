#!/bin/bash

# load-secrets - Load secrets from chezmoi keyring and export as env vars

set -euo pipefail

usage() {
    cat << EOF
Usage: load-secrets CONFIG_FILE

Load secrets from chezmoi keyring and export as environment variables.

CONFIG FILE FORMAT:
    VAR_NAME=service:user
    
    GITHUB_TOKEN=github:myusername
    DATABASE_PASSWORD=myapp:database

SETUP:
    1. Create ~/.secrets with above format
    2. Store secrets: chezmoi secret keyring set --service=github --user=myusername
        
USAGE:
    source <(load-secrets ~/.secrets)    # Load secrets into shell (safer than eval)
EOF
}

get_secret() {
    local service="$1"
    local user="$2"
    
    chezmoi secret keyring get --service="$service" --user="$user" 2>/dev/null
}

load_secrets() {
    local config_file="$1"
    local count=0
    
    [[ -f "$config_file" ]] || { echo "Config file not found: $config_file" >&2; return 1; }
    
    while IFS= read -r line || [[ -n "$line" ]]; do
        [[ -z "$line" || "$line" =~ ^[[:space:]]*# ]] && continue
        
        if [[ "$line" =~ ^([A-Za-z_][A-Za-z0-9_]*)=([^:]+):(.+)$ ]]; then
            local var_name="${BASH_REMATCH[1]}"
            local service="${BASH_REMATCH[2]}"
            local user="${BASH_REMATCH[3]}"
            
            if secret_value=$(get_secret "$service" "$user"); then
                echo "export $var_name=\"$secret_value\""
                ((count++))
            else
                echo "# Failed to get $var_name" >&2
            fi
        fi
    done < "$config_file"
    
    echo "# Loaded $count secrets" >&2
}



main() {
    if [[ $# -eq 0 ]]; then
        echo "Error: CONFIG_FILE required" >&2
        usage
        exit 1
    fi
    
    case $1 in
        -h|--help) usage; exit 0 ;;
        *) local config_file="$1" ;;
    esac
    
    if ! command -v chezmoi >/dev/null 2>&1; then
        echo "chezmoi not found" >&2
        exit 1
    fi
    
    load_secrets "$config_file"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi