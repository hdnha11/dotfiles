---
- name: macOS machine setup
  hosts: localhost
  connection: local
  become: true
  become_user: "{{ username }}"
  gather_facts: true
  vars:
    install_homebrew_if_missing: false

  pre_tasks:
    - name: Ensuring Homebrew is installed
      ansible.builtin.stat:
        path: /opt/homebrew/bin/brew
      register: homebrew_check

    - name: Fail if Homebrew is not installed and install_homebrew_if_missing is false
      ansible.builtin.fail:
        msg: Homebrew is missing...Install from http://brew.sh/
      when:
        - not homebrew_check.stat.exists
        - not install_homebrew_if_missing

    - name: Installing Homebrew
      ansible.builtin.shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      when:
        - not homebrew_check.stat.exists
        - install_homebrew_if_missing

  tasks:
    - name: Updating Homebrew
      community.general.homebrew:
        update_homebrew: yes
      when: homebrew_check.stat.exists

    - name: Upgrading Homebrew packages
      community.general.homebrew:
        upgrade_all: yes
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Installing Homebrew cask packages
      community.general.homebrew_cask:
        state: present
        name:
          - android-file-transfer
          - android-studio
          - basictex
          - bitwarden
          - blackhole-16ch
          - calibre
          - cursor
          - dbeaver-community
          - dotnet-sdk
          - evkey
          - figma
          - firefox
          - font-iosevka
          - ghidra
          - ghostty
          - google-chrome
          - google-cloud-sdk
          - google-drive
          - hammerspoon
          - handbrake
          - imhex
          - iterm2
          - kitty
          - logitech-options
          - mockoon
          - ngrok
          - obsidian
          - omnidisksweeper
          - postman
          - pritunl
          - qmk-toolbox
          - racket
          - signal
          - slack
          - smlnj
          - spotify
          - telegram
          - the-unarchiver
          - visual-studio-code
          - whatsapp
          - windows-app
          - wireshark
          - zalo
          - zoom
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Install Homebrew taps
      community.general.homebrew_tap:
        name:
          - browsh-org/browsh
          - clojure/tools
          - dart-lang/dart
          - domq/gdb
          - goles/battery
          - helix-editor/helix
          - heroku/brew
          - lokalise/cli-2
          - mongodb/brew
          - osx-cross/avr
          - px4/px4
      when: homebrew_check.stat.exists

    - name: Install Homebrew packages
      community.general.homebrew:
        state: present
        name:
          - adns
          - asciinema
          - asdf
          - automake
          - avrdude
          - bat
          - berkeley-db
          - bitwarden-cli
          - black
          - ccat
          - chezmoi
          - cloc
          - clojure
          - cmake
          - colima
          - coreutils
          - croc
          - csvq
          - ctags
          - curl
          - dfu-programmer
          - docker
          - docker-compose
          - docker-credential-helper
          - evince
          - exercism
          - fastfetch
          - fd
          - ffmpeg
          - flyway
          - folderify
          - fzf
          - git
          - gnu-typist
          - go
          - gobject-introspection
          - gocloc
          - gradle
          - gtk+
          - gtk-mac-integration
          - guile
          - haskell-stack
          - helix
          - htop
          - httpie
          - jansson
          - jmeter
          - jq
          - jsoncpp
          - k9s
          - lazygit
          - leiningen
          - libffi
          - libmaxminddb
          - libproxy
          - libsmi
          - libtermkey
          - libxml2
          - llvm
          - luarocks
          - lynx
          - maven
          - mercurial
          - minikube
          - mlton
          - mysql
          - mysql-client
          - nasm
          - nghttp2
          - nushell
          - ollama
          - opam
          - openapi-generator
          - openjdk
          - openldap
          - openssl
          - openvino
          - pandoc
          - perl
          - podman
          - polyml
          - postgresql@14
          - pre-commit
          - protobuf
          - protoc-gen-go
          - pv
          - python-tk@3.13
          - python@3.13
          - qemu
          - qt
          - radare2
          - rclone
          - redis
          - ripgrep
          - ruby-build
          - rustup
          - sbt
          - sops
          - syncthing
          - tcl-tk
          - telnet
          - temporal
          - texinfo
          - the_silver_searcher
          - tig
          - tmux
          - tokei
          - tree
          - unixodbc
          - vala
          - vim
          - wakatime-cli
          - watch
          - watchman
          - wget
          - whalebrew
          - yarn
          - zig
          - browsh-org/browsh/browsh
          - goles/battery/battery
          - heroku/brew/heroku
          - osx-cross/avr/avr-gcc@9
          - lokalise/cli-2/lokalise2
          - mongodb/brew/mongodb-community-shell
          - px4/px4/gcc-arm-none-eabi
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Ensuring Oh My Zsh is installed
      ansible.builtin.stat:
        path: ~/.oh-my-zsh
      register: oh_my_zsh_check

    - name: Install Oh My Zsh
      ansible.builtin.shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended --keep-zshrc --skip-chsh
      when: not oh_my_zsh_check.stat.exists

    - name: Ensuring Oh My Zsh zsh-autosuggestions installed
      ansible.builtin.stat:
        path: "~/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
      register: zsh_autosuggestions_check

    - name: Install Oh My Zsh zsh-autosuggestions
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions.git
        dest: "~/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
        depth: 1
      when: not zsh_autosuggestions_check.stat.exists

    - name: Ensuring Oh My Zsh zsh-syntax-highlighting installed
      ansible.builtin.stat:
        path: "~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
      register: zsh_syntax_highlighting_check

    - name: Install Oh My Zsh zsh-syntax-highlighting
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: "~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
        depth: 1
      when: not zsh_syntax_highlighting_check.stat.exists

    - name: Install ASDF Node.js
      ansible.builtin.shell: |
        asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git
        asdf install nodejs 18.19.1
        asdf set -u nodejs 18.19.1

    - name: Install ASDF Ruby
      ansible.builtin.shell: |
        asdf plugin add ruby https://github.com/asdf-vm/asdf-ruby.git
        asdf install ruby 3.4.2
        asdf set -u ruby 3.4.2

    - name: Install ASDF Golang
      ansible.builtin.shell: |
        asdf plugin add golang https://github.com/asdf-community/asdf-golang.git
        asdf set -u golang system

    - name: Install ASDF Zig
      ansible.builtin.shell: |
        asdf plugin add zig https://github.com/asdf-community/asdf-zig.git
        asdf set -u zig system

    - name: Install ASDF Flutter
      ansible.builtin.shell: asdf plugin add flutter https://github.com/asdf-community/asdf-flutter.git

    - name: Install Ruby Gems
      ansible.builtin.shell: |
        gem install tmuxinator
        gem install rails
